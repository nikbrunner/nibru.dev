{"version":3,"sources":["lazyload.js","js/LazyLoadConfig.js"],"names":["LazyLoad","global","factory","exports","_typeof","module","define","amd","self","this","runningOnBrowser","window","isBot","test","defaultSettings","elements_selector","threshold","thresholds","document","createElement","data_srcset","data_sizes","data_bg","data_poster","class_loading","class_loaded","class_error","load_delay","auto_unobserve","callback_enter","callback_exit","callback_reveal","callback_loaded","callback_error","callback_finish","use_native","getInstanceSettings","createInstance","classObj","options","event","detail","instance","CustomEvent","err","createEvent","eventString","dispatchEvent","dataPrefix","element","attribute","processedDataName","setData","value","getData","attrName","removeAttribute","getWasProcessedData","resetWasProcessedData","setTimeoutData","getTimeoutData","safeCallback","callback","arg1","arg2","arg3","purgeProcessedElements","undefined","elements","filter","updateLoadingCount","plusMinus","_elements","length","loadingCount","_settings","childTag","sourceTags","i","parentTag","children","tagName","push","setAttributeIfValue","setAttribute","setImageAttributes","settings","data_src","setSourcesFunctions","IMG","parentNode","parent","getSourceTags","forEach","sourceTag","IFRAME","setSourcesVideo","setSourcesFunction","className","removeClass","addClass","supportsClassList","replace","RegExp","addEventListener","eventName","handler","genericLoadEventName","mediaLoadEventName","removeEventListeners","loadHandler","errorHandler","removeEventListener","addEventListeners","remove","eventHandler","success","target","revealAndUnobserve","revealElement","observer","unobserve","onExit","timeoutId","clearTimeout","delayLoad","force","managedTags","indexOf","addOneShotEventListeners","elementToPurge","setSourcesImg","VIDEO","setSources","srcDataValue","style","backgroundImage","concat","bgDataValue","loadDelay","entries","setWasProcessedData","entry","cancelDelayLoad","setTimeout","callback_set","_observer","root","isIntersecting","container","rootMargin","getObserverSettings","nativeLazyTags","nodeSet","querySelectorAll","Array","prototype","slice","call","customSettings","getElements","setObserver","update","loadAllNative","retryLazyLoad","errorElements","HTMLImageElement","observe","loadAll","destroy","_this2","setOnlineCheck","load","_this3","autoInitialize","optionsItem","lazyLoadOptions","thumbs","thumb","src","loader","ll"],"mappings":"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","file":"LazyLoadConfig.d643117a.js","sourceRoot":"../src","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = global || self, global.LazyLoad = factory());\n}(this, function () { 'use strict';\n\n\tconst runningOnBrowser = typeof window !== \"undefined\";\r\n\r\n\tconst isBot =\r\n\t\t(runningOnBrowser && !(\"onscroll\" in window)) ||\r\n\t\t(typeof navigator !== \"undefined\" &&\r\n\t\t\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent));\r\n\r\n\tconst supportsIntersectionObserver =\r\n\t\trunningOnBrowser && \"IntersectionObserver\" in window;\r\n\r\n\tconst supportsClassList =\r\n\t\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\n\tconst defaultSettings = {\r\n\t\telements_selector: \"img\",\r\n\t\tcontainer: isBot || runningOnBrowser ? document : null,\r\n\t\tthreshold: 300,\r\n\t\tthresholds: null,\r\n\t\tdata_src: \"src\",\r\n\t\tdata_srcset: \"srcset\",\r\n\t\tdata_sizes: \"sizes\",\r\n\t\tdata_bg: \"bg\",\r\n\t\tdata_poster: \"poster\",\r\n\t\tclass_loading: \"loading\",\r\n\t\tclass_loaded: \"loaded\",\r\n\t\tclass_error: \"error\",\r\n\t\tload_delay: 0,\r\n\t\tauto_unobserve: true,\r\n\t\tcallback_enter: null,\r\n\t\tcallback_exit: null,\r\n\t\tcallback_reveal: null,\r\n\t\tcallback_loaded: null,\r\n\t\tcallback_error: null,\r\n\t\tcallback_finish: null,\r\n\t\tuse_native: false\r\n\t};\r\n\r\n\tvar getInstanceSettings = customSettings => {\r\n\t\treturn Object.assign({}, defaultSettings, customSettings);\r\n\t};\n\n\t/* Creates instance and notifies it through the window element */\r\n\tconst createInstance = function(classObj, options) {\r\n\t\tvar event;\r\n\t\tlet eventString = \"LazyLoad::Initialized\";\r\n\t\tlet instance = new classObj(options);\r\n\t\ttry {\r\n\t\t\t// Works in modern browsers\r\n\t\t\tevent = new CustomEvent(eventString, { detail: { instance } });\r\n\t\t} catch (err) {\r\n\t\t\t// Works in Internet Explorer (all versions)\r\n\t\t\tevent = document.createEvent(\"CustomEvent\");\r\n\t\t\tevent.initCustomEvent(eventString, false, false, { instance });\r\n\t\t}\r\n\t\twindow.dispatchEvent(event);\r\n\t};\r\n\r\n\t/* Auto initialization of one or more instances of lazyload, depending on the \r\n\t    options passed in (plain object or an array) */\r\n\tfunction autoInitialize(classObj, options) {\r\n\t\tif (!options) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!options.length) {\r\n\t\t\t// Plain object\r\n\t\t\tcreateInstance(classObj, options);\r\n\t\t} else {\r\n\t\t\t// Array of objects\r\n\t\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\r\n\t\t\t\tcreateInstance(classObj, optionsItem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\n\n\tconst dataPrefix = \"data-\";\r\n\tconst processedDataName = \"was-processed\";\r\n\tconst timeoutDataName = \"ll-timeout\";\r\n\tconst trueString = \"true\";\r\n\r\n\tconst getData = (element, attribute) => {\r\n\t\treturn element.getAttribute(dataPrefix + attribute);\r\n\t};\r\n\r\n\tconst setData = (element, attribute, value) => {\r\n\t\tvar attrName = dataPrefix + attribute;\r\n\t\tif (value === null) {\r\n\t\t\telement.removeAttribute(attrName);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telement.setAttribute(attrName, value);\r\n\t};\r\n\r\n\tconst resetWasProcessedData = element =>\r\n\t\tsetData(element, processedDataName, null);\r\n\r\n\tconst setWasProcessedData = element =>\r\n\t\tsetData(element, processedDataName, trueString);\r\n\r\n\tconst getWasProcessedData = element =>\r\n\t\tgetData(element, processedDataName) === trueString;\r\n\r\n\tconst setTimeoutData = (element, value) =>\r\n\t\tsetData(element, timeoutDataName, value);\r\n\r\n\tconst getTimeoutData = element => getData(element, timeoutDataName);\n\n\tconst purgeProcessedElements = elements => {\r\n\t\treturn elements.filter(element => !getWasProcessedData(element));\r\n\t};\r\n\r\n\tconst purgeOneElement = (elements, elementToPurge) => {\r\n\t\treturn elements.filter(element => element !== elementToPurge);\r\n\t};\n\n\tconst safeCallback = (callback, arg1, arg2, arg3) => {\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (arg3 !== undefined) {\r\n\t\t\tcallback(arg1, arg2, arg3);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (arg2 !== undefined) {\r\n\t\t\tcallback(arg1, arg2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcallback(arg1);\r\n\t};\n\n\tconst updateLoadingCount = (instance, plusMinus) => {\r\n\t    instance.loadingCount += plusMinus;\r\n\t    if (instance._elements.length === 0 && instance.loadingCount === 0) {\r\n\t        safeCallback(instance._settings.callback_finish, instance);\r\n\t    }\r\n\t};\n\n\tconst getSourceTags = parentTag => {\r\n\t\tlet sourceTags = [];\r\n\t\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\r\n\t\t\tif (childTag.tagName === \"SOURCE\") {\r\n\t\t\t\tsourceTags.push(childTag);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sourceTags;\r\n\t};\r\n\r\n\tconst setAttributeIfValue = (element, attrName, value) => {\r\n\t\tif (!value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telement.setAttribute(attrName, value);\r\n\t};\r\n\r\n\tconst setImageAttributes = (element, settings) => {\r\n\t\tsetAttributeIfValue(\r\n\t\t\telement,\r\n\t\t\t\"sizes\",\r\n\t\t\tgetData(element, settings.data_sizes)\r\n\t\t);\r\n\t\tsetAttributeIfValue(\r\n\t\t\telement,\r\n\t\t\t\"srcset\",\r\n\t\t\tgetData(element, settings.data_srcset)\r\n\t\t);\r\n\t\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\r\n\t};\r\n\r\n\tconst setSourcesImg = (element, settings) => {\r\n\t\tconst parent = element.parentNode;\r\n\r\n\t\tif (parent && parent.tagName === \"PICTURE\") {\r\n\t\t\tlet sourceTags = getSourceTags(parent);\r\n\t\t\tsourceTags.forEach(sourceTag => {\r\n\t\t\t\tsetImageAttributes(sourceTag, settings);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetImageAttributes(element, settings);\r\n\t};\r\n\r\n\tconst setSourcesIframe = (element, settings) => {\r\n\t\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\r\n\t};\r\n\r\n\tconst setSourcesVideo = (element, settings) => {\r\n\t\tlet sourceTags = getSourceTags(element);\r\n\t\tsourceTags.forEach(sourceTag => {\r\n\t\t\tsetAttributeIfValue(\r\n\t\t\t\tsourceTag,\r\n\t\t\t\t\"src\",\r\n\t\t\t\tgetData(sourceTag, settings.data_src)\r\n\t\t\t);\r\n\t\t});\r\n\t\tsetAttributeIfValue(\r\n\t\t\telement,\r\n\t\t\t\"poster\",\r\n\t\t\tgetData(element, settings.data_poster)\r\n\t\t);\r\n\t\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\r\n\t\telement.load();\r\n\t};\r\n\r\n\tconst setSourcesBgImage = (element, settings) => {\r\n\t\tconst srcDataValue = getData(element, settings.data_src);\r\n\t\tconst bgDataValue = getData(element, settings.data_bg);\r\n\r\n\t\tif (srcDataValue) {\r\n\t\t\telement.style.backgroundImage = `url(\"${srcDataValue}\")`;\r\n\t\t}\r\n\r\n\t\tif (bgDataValue) {\r\n\t\t\telement.style.backgroundImage = bgDataValue;\r\n\t\t}\r\n\t};\r\n\r\n\tconst setSourcesFunctions = {\r\n\t\tIMG: setSourcesImg,\r\n\t\tIFRAME: setSourcesIframe,\r\n\t\tVIDEO: setSourcesVideo\r\n\t};\r\n\r\n\tconst setSources = (element, instance) => {\r\n\t\tconst settings = instance._settings;\r\n\t\tconst tagName = element.tagName;\r\n\t\tconst setSourcesFunction = setSourcesFunctions[tagName];\r\n\t\tif (setSourcesFunction) {\r\n\t\t\tsetSourcesFunction(element, settings);\r\n\t\t\tupdateLoadingCount(instance, 1);\r\n\t\t\tinstance._elements = purgeOneElement(instance._elements, element);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSourcesBgImage(element, settings);\r\n\t};\n\n\tconst addClass = (element, className) => {\r\n\t\tif (supportsClassList) {\r\n\t\t\telement.classList.add(className);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telement.className += (element.className ? \" \" : \"\") + className;\r\n\t};\r\n\r\n\tconst removeClass = (element, className) => {\r\n\t\tif (supportsClassList) {\r\n\t\t\telement.classList.remove(className);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telement.className = element.className.\r\n\t\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\r\n\t\t\treplace(/^\\s+/, \"\").\r\n\t\t\treplace(/\\s+$/, \"\");\r\n\t};\n\n\tconst genericLoadEventName = \"load\";\r\n\tconst mediaLoadEventName = \"loadeddata\";\r\n\tconst errorEventName = \"error\";\r\n\r\n\tconst addEventListener = (element, eventName, handler) => {\r\n\t\telement.addEventListener(eventName, handler);\r\n\t};\r\n\r\n\tconst removeEventListener = (element, eventName, handler) => {\r\n\t\telement.removeEventListener(eventName, handler);\r\n\t};\r\n\r\n\tconst addEventListeners = (element, loadHandler, errorHandler) => {\r\n\t\taddEventListener(element, genericLoadEventName, loadHandler);\r\n\t\taddEventListener(element, mediaLoadEventName, loadHandler);\r\n\t\taddEventListener(element, errorEventName, errorHandler);\r\n\t};\r\n\r\n\tconst removeEventListeners = (element, loadHandler, errorHandler) => {\r\n\t\tremoveEventListener(element, genericLoadEventName, loadHandler);\r\n\t\tremoveEventListener(element, mediaLoadEventName, loadHandler);\r\n\t\tremoveEventListener(element, errorEventName, errorHandler);\r\n\t};\r\n\r\n\tconst eventHandler = function(event, success, instance) {\r\n\t\tvar settings = instance._settings;\r\n\t\tconst className = success ? settings.class_loaded : settings.class_error;\r\n\t\tconst callback = success\r\n\t\t\t? settings.callback_loaded\r\n\t\t\t: settings.callback_error;\r\n\t\tconst element = event.target;\r\n\r\n\t\tremoveClass(element, settings.class_loading);\r\n\t\taddClass(element, className);\r\n\t\tsafeCallback(callback, element, instance);\r\n\r\n\t\tupdateLoadingCount(instance, -1);\r\n\t};\r\n\r\n\tconst addOneShotEventListeners = (element, instance) => {\r\n\t\tconst loadHandler = event => {\r\n\t\t\teventHandler(event, true, instance);\r\n\t\t\tremoveEventListeners(element, loadHandler, errorHandler);\r\n\t\t};\r\n\t\tconst errorHandler = event => {\r\n\t\t\teventHandler(event, false, instance);\r\n\t\t\tremoveEventListeners(element, loadHandler, errorHandler);\r\n\t\t};\r\n\t\taddEventListeners(element, loadHandler, errorHandler);\r\n\t};\n\n\tconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\r\n\r\n\tconst onEnter = (element, entry, instance) => {\r\n\t\tconst settings = instance._settings;\r\n\t\tsafeCallback(settings.callback_enter, element, entry, instance);\r\n\t\tif (!settings.load_delay) {\r\n\t\t\trevealAndUnobserve(element, instance);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdelayLoad(element, instance);\r\n\t};\r\n\r\n\tconst revealAndUnobserve = (element, instance) => {\r\n\t\tvar observer = instance._observer;\r\n\t\trevealElement(element, instance);\r\n\t\tif (observer && instance._settings.auto_unobserve) {\r\n\t\t\tobserver.unobserve(element);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onExit = (element, entry, instance) => {\r\n\t\tconst settings = instance._settings;\r\n\t\tsafeCallback(settings.callback_exit, element, entry, instance);\r\n\t\tif (!settings.load_delay) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcancelDelayLoad(element);\r\n\t};\r\n\r\n\tconst cancelDelayLoad = element => {\r\n\t\tvar timeoutId = getTimeoutData(element);\r\n\t\tif (!timeoutId) {\r\n\t\t\treturn; // do nothing if timeout doesn't exist\r\n\t\t}\r\n\t\tclearTimeout(timeoutId);\r\n\t\tsetTimeoutData(element, null);\r\n\t};\r\n\r\n\tconst delayLoad = (element, instance) => {\r\n\t\tvar loadDelay = instance._settings.load_delay;\r\n\t\tvar timeoutId = getTimeoutData(element);\r\n\t\tif (timeoutId) {\r\n\t\t\treturn; // do nothing if timeout already set\r\n\t\t}\r\n\t\ttimeoutId = setTimeout(function() {\r\n\t\t\trevealAndUnobserve(element, instance);\r\n\t\t\tcancelDelayLoad(element);\r\n\t\t}, loadDelay);\r\n\t\tsetTimeoutData(element, timeoutId);\r\n\t};\r\n\r\n\tconst revealElement = (element, instance, force) => {\r\n\t\tvar settings = instance._settings;\r\n\t\tif (!force && getWasProcessedData(element)) {\r\n\t\t\treturn; // element has already been processed and force wasn't true\r\n\t\t}\r\n\t\tif (managedTags.indexOf(element.tagName) > -1) {\r\n\t\t\taddOneShotEventListeners(element, instance);\r\n\t\t\taddClass(element, settings.class_loading);\r\n\t\t}\r\n\t\tsetSources(element, instance);\r\n\t\tsetWasProcessedData(element);\r\n\t\tsafeCallback(settings.callback_reveal, element, instance);\r\n\t\tsafeCallback(settings.callback_set, element, instance);\r\n\t};\n\n\tconst isIntersecting = entry =>\r\n\t\tentry.isIntersecting || entry.intersectionRatio > 0;\r\n\r\n\tconst getObserverSettings = settings => ({\r\n\t\troot: settings.container === document ? null : settings.container,\r\n\t\trootMargin: settings.thresholds || settings.threshold + \"px\"\r\n\t});\r\n\r\n\tconst setObserver = instance => {\r\n\t\tif (!supportsIntersectionObserver) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tinstance._observer = new IntersectionObserver(entries => {\r\n\t\t\tentries.forEach(entry =>\r\n\t\t\t\tisIntersecting(entry)\r\n\t\t\t\t\t? onEnter(entry.target, entry, instance)\r\n\t\t\t\t\t: onExit(entry.target, entry, instance)\r\n\t\t\t);\r\n\t\t}, getObserverSettings(instance._settings));\r\n\t\treturn true;\r\n\t};\n\n\tconst nativeLazyTags = [\"IMG\", \"IFRAME\"];\r\n\r\n\tconst shouldUseNative = settings =>\r\n\t\tsettings.use_native && \"loading\" in HTMLImageElement.prototype;\r\n\r\n\tconst loadAllNative = instance => {\r\n\t\tinstance._elements.forEach(element => {\r\n\t\t\tif (nativeLazyTags.indexOf(element.tagName) === -1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.setAttribute(\"loading\", \"lazy\");\r\n\t\t\trevealElement(element, instance);\r\n\t\t});\r\n\t};\n\n\tconst nodeSetToArray = nodeSet => Array.prototype.slice.call(nodeSet);\n\n\tconst queryElements = settings =>\r\n\t\tsettings.container.querySelectorAll(settings.elements_selector);\r\n\r\n\tconst getElements = (elements, settings) =>\r\n\t\tpurgeProcessedElements(nodeSetToArray(elements || queryElements(settings)));\n\n\tconst retryLazyLoad = instance => {\r\n\t\tvar settings = instance._settings;\r\n\t\tvar errorElements = settings.container.querySelectorAll(\r\n\t\t\t\".\" + settings.class_error\r\n\t\t);\r\n\t\terrorElements.forEach(element => {\r\n\t\t\tremoveClass(element, settings.class_error);\r\n\t\t\tresetWasProcessedData(element);\r\n\t\t});\r\n\t\tinstance.update();\r\n\t};\r\n\r\n\tconst setOnlineCheck = instance => {\r\n\t\tif (!runningOnBrowser) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\twindow.addEventListener(\"online\", event => {\r\n\t\t\tretryLazyLoad(instance);\r\n\t\t});\r\n\t};\n\n\tconst LazyLoad = function(customSettings, elements) {\r\n\t    this._settings = getInstanceSettings(customSettings);\r\n\t    this.loadingCount = 0;\r\n\t    setObserver(this);\r\n\t    this.update(elements);\r\n\t    setOnlineCheck(this);\r\n\t};\r\n\r\n\tLazyLoad.prototype = {\r\n\t    update: function(elements) {\r\n\t        var settings = this._settings;\r\n\t        this._elements = getElements(elements, settings);\r\n\t        if (isBot || !this._observer) {\r\n\t            this.loadAll();\r\n\t            return;\r\n\t        }\r\n\t        if (shouldUseNative(settings)) {\r\n\t            loadAllNative(this);\r\n\t            this._elements = getElements(elements, settings);\r\n\t        }\r\n\t        this._elements.forEach(element => {\r\n\t            this._observer.observe(element);\r\n\t        });\r\n\t    },\r\n\r\n\t    destroy: function() {\r\n\t        if (this._observer) {\r\n\t            this._elements.forEach(element => {\r\n\t                this._observer.unobserve(element);\r\n\t            });\r\n\t            this._observer = null;\r\n\t        }\r\n\t        this._elements = null;\r\n\t        this._settings = null;\r\n\t    },\r\n\r\n\t    load: function(element, force) {\r\n\t        revealElement(element, this, force);\r\n\t    },\r\n\r\n\t    loadAll: function() {\r\n\t        this._elements.forEach(element => {\r\n\t            revealAndUnobserve(element, this);\r\n\t        });\r\n\t    }\r\n\t};\r\n\r\n\t/* Automatic instances creation if required (useful for async script loading) */\r\n\tif (runningOnBrowser) {\r\n\t    autoInitialize(LazyLoad, window.lazyLoadOptions);\r\n\t}\n\n\treturn LazyLoad;\n\n}));\n","import LazyLoad from 'vanilla-lazyload';\r\nimport loader from '../img/loader.svg';\r\n\r\nconst thumbs = [...document.querySelectorAll('.lazy')];\r\n\r\nthumbs.forEach(thumb => {\r\n\tthumb.src = loader;\r\n});\r\n\r\nconst ll = new LazyLoad({\r\n\telements_selector: '.lazy',\r\n\tthreshold: 0\r\n});\r\n"]}